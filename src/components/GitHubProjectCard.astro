---
interface Props {
	repoUrl: string;
}

const { repoUrl } = Astro.props;

// Extract repo name from URL
const repoName = repoUrl.replace("https://github.com/", "");
const [owner, repo] = repoName.split("/");
const simpleUUID = `GH-${crypto.randomUUID()}`;
---

<div id={simpleUUID} class="github-card gh-loading">
	<div class="gh-title title">
		<span class="gh-avatar"></span>
		<a class="gh-text not-prose cactus-link" href={repoUrl}>
			{owner}/{repo}
		</a>
		<span class="gh-icon"></span>
	</div>
	<div class="gh-description">
		Loading repository information...
	</div>
	<div class="gh-chips">
		<span class="gh-stars">00K</span>
		<span class="gh-forks">00K</span>
		<span class="gh-language"></span>
		<span class="gh-license">MIT</span>
	</div>

	<script define:vars={{ simpleUUID, repoName }}>
		fetch(`https://api.github.com/repos/${repoName}`, { referrerPolicy: "no-referrer" })
			.then(response => response.json())
			.then(data => {
				const card = document.getElementById(simpleUUID);
				if (!card) return;

				card.classList.remove("gh-loading");

				// Update description
				const descEl = card.querySelector('.gh-description');
				if (data.description) {
					descEl.textContent = data.description.replace(/:[a-zA-Z0-9_]+:/g, '');
				} else {
					descEl.style.display = 'none';
				}

				// Update avatar
				const avatarEl = card.querySelector('.gh-avatar');
				avatarEl.style.backgroundImage = `url(${data.owner.avatar_url})`;

				// Update stats
				const formatNumber = (num) => Intl.NumberFormat(undefined, { notation: "compact", maximumFractionDigits: 1 }).format(num).replaceAll("\u202f", "");

				const starsEl = card.querySelector('.gh-stars');
				starsEl.textContent = formatNumber(data.stargazers_count);

				const forksEl = card.querySelector('.gh-forks');
				forksEl.textContent = formatNumber(data.forks);

				const langEl = card.querySelector('.gh-language');
				if (data.language) {
					langEl.textContent = data.language;
				} else {
					langEl.style.display = 'none';
				}

				const licenseEl = card.querySelector('.gh-license');
				if (data.license?.spdx_id) {
					licenseEl.textContent = data.license.spdx_id;
				} else {
					licenseEl.style.display = 'none';
				}
			})
			.catch(err => {
				const card = document.getElementById(simpleUUID);
				if (card) {
					card.classList.add("gh-error");
				}
				console.warn("[GITHUB-PROJECT-CARD] Error loading card for", repoName, err);
			});
	</script>
</div>