---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
};

const { as: Tag = "div", post, withDesc = false } = Astro.props;
---

<FormattedDate
	class="min-w-30 font-semibold text-gray-600 dark:text-gray-400"
	date={post.data.publishDate}
/>
<Tag
	class="grid [grid-template-columns:auto_1fr_auto] items-center gap-2 sm:[grid-template-columns:auto_auto_1fr_auto]"
>
	{post.data.draft && <span class="text-red-500">(Draft) </span>}
	<a class="cactus-link" data-astro-prefetch href={`/posts/${post.id}/`}>
		{post.data.title}
	</a>
	<span></span>
	<div
		class="block h-px [background-image:linear-gradient(90deg,var(--ui-border-color)_1px,transparent_1px)] bg-[length:4px_1px] bg-bottom bg-repeat-x [--ui-border-color:theme(colors.gray.300)] dark:[--ui-border-color:theme(colors.gray.700)]"
	>
	</div>
	{
		post.data.stats && (
			<span class="relative block text-sm tracking-wide text-nowrap">{post.data.stats}</span>
		)
	}
</Tag>
{withDesc && <q class="line-clamp-3 italic">{post.data.description}</q>}
