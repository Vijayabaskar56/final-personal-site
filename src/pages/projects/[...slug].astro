---
import { getCollection, render } from "astro:content";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { Icon } from "astro-icon/components";
import PageLayout from "@/layouts/Base.astro";

export const getStaticPaths = (async () => {
	const allProjects = await getCollection("project");
	return allProjects.map((project) => ({
		params: { slug: project.id },
		props: { project },
	}));
}) satisfies GetStaticPaths;

export type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { project } = Astro.props;
const { Content } = await render(project);

const meta = {
	description: project.data.description,
	title: project.data.title,
};
---

<PageLayout meta={meta}>
	<article>
		{/* Project Header */}
		<div class="mb-8">
			<div class="mb-4 flex items-start justify-between">
				<div class="flex items-center gap-4">
					<div
						class="flex h-16 w-16 items-center justify-center rounded-xl bg-gradient-to-br from-blue-400 to-blue-600 text-2xl text-white shadow-lg"
					>
						{project.data.logo}
					</div>
					<div>
						<h1 class="title mb-2">{project.data.title}</h1>
						<div class="flex items-center gap-4 text-sm text-zinc-500 dark:text-zinc-400">
							<span>{project.data.year}</span>
							<span
								class="inline-flex items-center rounded-full bg-green-100 px-2.5 py-0.5 text-xs font-medium text-green-800 dark:bg-green-900 dark:text-green-200"
							>
								{project.data.status.replace("-", " ")}
							</span>
						</div>
					</div>
				</div>

				{/* Action buttons */}
				<div class="flex items-center gap-2">
					{
						project.data.github && (
							<a
								href={project.data.github}
								target="_blank"
								rel="noopener noreferrer"
								class="inline-flex items-center gap-2 rounded-lg bg-zinc-100 px-4 py-2 text-sm font-medium text-zinc-700 hover:bg-zinc-200 dark:bg-zinc-700 dark:text-zinc-300 dark:hover:bg-zinc-600"
							>
								<Icon name="mdi:github" class="h-4 w-4" />
								GitHub
							</a>
						)
					}
					{
						project.data.demo && (
							<a
								href={project.data.demo}
								target="_blank"
								rel="noopener noreferrer"
								class="bg-accent hover:bg-accent/90 inline-flex items-center gap-2 rounded-lg px-4 py-2 text-sm font-medium text-white"
							>
								<Icon name="mdi:play-circle" class="h-4 w-4" />
								Live Demo
							</a>
						)
					}
				</div>
			</div>

			<p class="mb-6 text-lg text-zinc-600 dark:text-zinc-300">
				{project.data.description}
			</p>

			{/* Tags */}
			{
				project.data.tags.length > 0 && (
					<div class="mb-6 flex flex-wrap gap-2">
						{project.data.tags.map((tag) => (
							<span class="inline-flex items-center rounded-full bg-zinc-100 px-3 py-1 text-sm font-medium text-zinc-800 dark:bg-zinc-700 dark:text-zinc-200">
								{tag}
							</span>
						))}
					</div>
				)
			}

			{/* Metrics */}
			{
				project.data.metrics && project.data.metrics.length > 0 && (
					<div class="mb-6 flex items-center gap-6">
						{project.data.metrics.map((metric) => (
							<div class="flex items-center gap-2">
								<div class="flex h-8 w-8 items-center justify-center rounded-lg bg-zinc-100 dark:bg-zinc-700">
									<Icon name="mdi:star" class="h-4 w-4 text-zinc-600 dark:text-zinc-400" />
								</div>
								<div>
									<div class="font-semibold text-zinc-900 dark:text-zinc-100">{metric.value}</div>
									<div class="text-xs text-zinc-500 dark:text-zinc-400">{metric.label}</div>
								</div>
							</div>
						))}
					</div>
				)
			}
		</div>

		{/* Project Content */}
		<div class="prose prose-cactus max-w-none">
			<Content />
		</div>

		{/* Back to projects */}
		<div class="mt-12 border-t border-zinc-200 pt-8 dark:border-zinc-700">
			<a href="/projects/" class="text-accent inline-flex items-center gap-2 hover:underline">
				<Icon name="mdi:arrow-left" class="h-4 w-4" />
				Back to Projects
			</a>
		</div>
	</article>
</PageLayout>
